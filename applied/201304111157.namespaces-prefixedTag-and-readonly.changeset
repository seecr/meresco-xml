Changeset created on Thu Apr 11 11:57:18 UTC 2013 by Seecr (Seek You Too B.V.)

Description: Namespaces with prefixedTag and readonly

    The namespaces object is now a readonly dictionary, use copyUpdate or select
    to create a new one.
    The method prefixedTag will turn a tag like {someuri}localtag into prefix:localtag

Baseline version: 4.0.3

From a15e6a493921e10c0aa107c27364862d662c8857 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Thu, 11 Apr 2013 11:20:55 +0200
Subject: [PATCH 1/1] JPM/TJ: added prefixedTag and made namespaces object read-only

---
 meresco/xml/namespaces.py |   49 +++++++++++++++++++++++++++++++-------------
 test/namespacestest.py    |   46 +++++++++++++++++++++++++++++++-----------
 2 files changed, 68 insertions(+), 27 deletions(-)

diff --git a/meresco/xml/namespaces.py b/meresco/xml/namespaces.py
index 400f013..10ef022 100644
--- a/meresco/xml/namespaces.py
+++ b/meresco/xml/namespaces.py
@@ -1,33 +1,37 @@
 ## begin license ##
-# 
-# "Meresco-Xml" is a set of components and tools for handling xml data objects. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
+#
+# "Meresco-Xml" is a set of components and tools for handling xml data objects.
+#
+# Copyright (C) 2012-2013 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012-2013 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+#
 # This file is part of "Meresco-Xml"
-# 
+#
 # "Meresco-Xml" is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
-# 
+#
 # "Meresco-Xml" is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
-# 
+#
 # You should have received a copy of the GNU General Public License
 # along with "Meresco-Xml"; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
+#
 ## end license ##
 
 class _namespaces(dict):
+    def __init__(self, *args, **kwargs):
+        dict.__init__(self, *args, **kwargs)
+        self._reverse = dict((v,k) for k,v in self.items()) 
+
     def __getattr__(self, key):
         try: 
             return self[key]
-        except KeyError, e:
+        except KeyError:
             raise AttributeError(key)
 
     def xpath(self, node, path):
@@ -38,21 +42,36 @@ class _namespaces(dict):
         return nodes[0] if nodes else None
 
     def copyUpdate(self, d):
-        newNamespaces = self.__class__(self)
-        newNamespaces.update(d)
-        return newNamespaces
+        return self.__class__(dict(self, **d))
 
     def select(self, *prefixes):
         return self.__class__((k, self[k]) for k in prefixes)
 
-    def expandNs(self, name):
+    def expandNsTag(self, name):
         ns, value = name.split(':', 1)
         return '{%s}%s' % (self[ns], value)
+    expandNs = expandNsTag
 
     def expandNsUri(self, name):
         ns, value = name.split(':', 1)
         return '%s%s' % (self[ns], value)
 
+    def prefixedTag(self, tag):
+        if not (tag.startswith('{') and '}' in tag):
+            raise ValueError("Expected '{some:uri}tagname', but got '%s'" % tag)
+        uri, _, localtag = tag[1:].partition('}')
+        prefix = self._reverse[uri]
+        return '%s:%s' % (prefix, localtag)
+
+    def _notsupported(self, *args, **kwargs):
+        raise TypeError('The namespaces object is readonly. Use select(..) or copyUpdate(..) to create a new namespaces object.')
+
+    __delitem__ = _notsupported
+    __setitem__ = _notsupported
+    clear = _notsupported
+    setdefault = _notsupported
+    update = _notsupported
+
 
 namespaces = _namespaces(
     dc="http://purl.org/dc/elements/1.1/",
diff --git a/test/namespacestest.py b/test/namespacestest.py
index e706072..eac772e 100644
--- a/test/namespacestest.py
+++ b/test/namespacestest.py
@@ -1,26 +1,26 @@
 ## begin license ##
-# 
-# "Meresco-Xml" is a set of components and tools for handling xml data objects. 
-# 
-# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
-# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
-# 
+#
+# "Meresco-Xml" is a set of components and tools for handling xml data objects.
+#
+# Copyright (C) 2012-2013 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012-2013 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
+#
 # This file is part of "Meresco-Xml"
-# 
+#
 # "Meresco-Xml" is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
-# 
+#
 # "Meresco-Xml" is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
-# 
+#
 # You should have received a copy of the GNU General Public License
 # along with "Meresco-Xml"; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
+#
 ## end license ##
 
 from seecr.test import SeecrTestCase
@@ -49,8 +49,11 @@ class NamespacesTest(SeecrTestCase):
         self.assertFalse('srw' in ns2)
         self.assertTrue(hasattr(ns2, 'xpath'))
 
-    def testExpandNs(self):
-        self.assertEquals('{http://www.loc.gov/zing/srw/}record', namespaces.expandNs('srw:record'))
+    def testExpandNsTag(self):
+        self.assertEquals('{http://www.loc.gov/zing/srw/}record', namespaces.expandNsTag('srw:record'))
+        self.assertEquals('{http://purl.org/dc/elements/1.1/}title', namespaces.expandNsTag('dc:title'))
+
+    def testExpandNs_backwards_compatible(self):
         self.assertEquals('{http://purl.org/dc/elements/1.1/}title', namespaces.expandNs('dc:title'))
 
     def testExpandNsUri(self):
@@ -58,4 +61,23 @@ class NamespacesTest(SeecrTestCase):
         self.assertEquals('http://purl.org/dc/elements/1.1/title', namespaces.expandNsUri('dc:title'))
         self.assertEquals('http://www.w3.org/1999/02/22-rdf-syntax-ns#type', namespaces.expandNsUri('rdf:type'))
 
+    def testPrefixedTag(self):
+        self.assertEquals('dc:title', namespaces.prefixedTag('{http://purl.org/dc/elements/1.1/}title'))
+        self.assertRaises(KeyError, namespaces.prefixedTag, '{unknown}tag')
+        self.assertRaises(ValueError, namespaces.prefixedTag, 'no-uri-in-tag')
+        self.assertEquals('srw:records', namespaces.prefixedTag(namespaces.expandNsTag('srw:records')))
+        ns2 = namespaces.copyUpdate({'new':'uri:new'})
+        self.assertEquals('new:tag', ns2.prefixedTag('{uri:new}tag'))
+
+    def testNotAllDictMethodsSupported(self):
+        def deleteNsItem():
+            del namespaces['dc']
+        self.assertRaises(TypeError, deleteNsItem)
+        def setNsItem():
+            namespaces['new'] = 'uri'
+        self.assertRaises(TypeError, setNsItem)
+        self.assertRaises(TypeError, lambda: namespaces.update({'new':'uri'}))
+        self.assertRaises(TypeError, lambda: namespaces.setdefault('key', 'value'))
 
+    def testFormatting(self):
+        self.assertEquals('Uri=http://purl.org/dc/elements/1.1/', 'Uri=%(dc)s' % namespaces)
-- 
1.7.1

